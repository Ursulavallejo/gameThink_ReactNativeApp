STEPS for instaltion project and Dependencies:


Step 1:  Expo React Native Project:

a. To create the React Native project with a empty template:

npx create-expo-app@latest nameProject --template blank

b. $ cd nameProject
c. $ npm start    // $ npx expo start

d. create a especifuc gitignore if need it


STEP 2 :  Navigation Dependencies:

# Install the core React Navigation package
npm install @react-navigation/native

# Install required dependencies for React Navigation
npm install react-native-screens react-native-safe-area-context

Install Additional Navigation Packages>>>

npm install @react-navigation/stack
npm install @react-navigation/bottom-tabs
npm install @react-navigation/drawer

 Install React Native Gesture Handler (if needed)>>>

 npm install react-native-gesture-handler

 Rebuild the Project>>>>

rebuild with EXPO
$ expo start -c

STEP 3:  Formik / logIn/ Sign Up

npm install formik

-- To handle Validation with YUP:

npm install yup



STEP 4:  CSS Tailwind

npm install --save-dev --save-exact tailwindcss@3.3.2

npx tailwind init

* modify tailwind.config.js >>

  content: [
    './App.{js, jsx, ts, tsx}',
    './components/**/*.{js, jsx , ts, tsx}',
    './app/**/*.{js,  jsx, ts, tsx}',
  ],

* modify babel.config.js >>

   plugins: ['nativewind/babel'],

   -npm install nativewind

STEP 5:  Splash

npm install expo-splash-screen


STEP 7:  Expo-router

   npm install expo-router

STEP 8:  ESLINT

npm install --save-dev eslint@8 eslint-plugin-react eslint-plugin-react-native


  ** ESLint-konfigurationsfil (.eslintrc.json i projektets rotmapp):
   {
  "env": {
    "react-native/react-native": true
  },
  "extends": ["eslint:recommended", "plugin:react/recommended"],
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": ["react", "react-native"],
  "root": true,
  "rules": {
    "react/react-in-jsx-scope": "off"
  }
}


STEP 8 :  aSYNC STORAGE




>>>>>>>>>>>>>>>>>>>> GIT  >> TO GO BACK IN CASE OF MISTAKES...

To go back to the last commit was saved....

1. Revert to the Last Commit
This will undo all changes since your last commit, including any dependency installations or code changes.

Open your terminal in the project directory and run:

git reset --hard HEAD


--hard: This option discards all changes in the working directory and the staging area, making your project exactly as it was at the last commit.

2. Clean Up Untracked Files and Directories
If you've installed new dependencies, there may be new files in your node_modules or other untracked files that weren't part of your last commit. To remove these:


git clean -fd

-f: Force the removal of untracked files.
-d: Remove untracked directories as well.

3. Install Dependencies Based on package-lock.json
After reverting, you'll want to make sure you have the correct dependencies installed. Run:

npm install


This process will take your project back to the state it was in at the last commit, removing any changes or dependencies added after that point.
